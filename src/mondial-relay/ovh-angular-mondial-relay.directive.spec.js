/* global describe:true, beforeEach:true, afterEach:true, it:true, expect: true */
"use strict";

describe("angular-ovh-mondial-relay", function () {

    var $compile;
    var $scope;
    var elem;

    beforeEach(function () {
        // this module is generated by grunt task. we need to create it to satisfy dependencies
        angular.module("angular-ovh-mondial-relay-images", []);
        angular.module("angular-ovh-mondial-relay-images").constant("MONDIAL_RELAY_PICS", {});
    });

    beforeEach(function () {
        // these are the dependencies to the API
        angular.module("test.api", []);

        angular.module("test.api").service("SupplyMondialRelay", function () {
            return {
                lexi: function () {
                    return {
                        search: function () {
                            // Do nothing
                        }
                    };
                }
            };
        });

        angular.module("test.api").service("User", function () {
            return {
                lexi: function () {
                    return {
                        get: function () {
                            // Do nothing
                        }
                    };
                }
            };
        });

        module("angular-ovh-mondial-relay", "test.api");
    });

    // Load the module to test
    beforeEach(angular.mock.module("angular-ovh-mondial-relay"));

    // Load the templates module generated by ngHtml2Js Karma preprocessor
    beforeEach(angular.mock.module("templates"));

    // Create scope
    beforeEach(angular.mock.inject(function (_$rootScope_, _$compile_) {
        $scope = _$rootScope_.$new();
        $compile = _$compile_;

        elem = $("<div>").prependTo("body");
        $scope.$digest();
    }));

    afterEach(function () {
        $scope.$destroy();
        elem.remove();
    });

    var templates = {
        "default": {
            element: "<mondial-relay data-ng-model=\"MyRelay\"></mondial-relay>",
            scope: {}
        }
    };

    function compileDirective (templateName, locals) {
        var template = templates[templateName];
        angular.extend($scope, angular.copy(template.scope) || angular.copy(templates.default.scope), locals);
        var element = $(template.element).appendTo(elem);
        element = $compile(element)($scope);
        $scope.$digest();
        return jQuery(element[0]);
    }

    // ---

    describe("Directive", function () {

        it("should load the default directive", angular.mock.inject(function () {

            var element = compileDirective("default");
            var container = element.children();
            expect(container.hasClass("mondial-relay")).toBeTruthy();

        }));

    });

});
